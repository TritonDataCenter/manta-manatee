#!/bin/bash

#
# manatee-clear-error: clear a shard from error state
#

if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail

function usage() {
cat << HERE
usage: $0 shard_id

Clear a manatee shard from the error state.

OPTIONS:
-h Show this message
-v Verbose

EXAMPLE:
$0 "1\.moray\.beta1\.joyent\.us"
HERE
}

while getopts "h:v" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        v)
            set -o xtrace
            verbose="1"
            ;;
        ?)
            usage
            exit
            ;;
    esac
done

if [[ -z $verbose ]]
then
    SHARD=$1
else
    SHARD=$2
fi

if [[ -z $SHARD ]]
then
    echo "must specify a shard_id"
    usage
    exit 1
fi

ROOT=/opt/smartdc/manta

PATH=$ROOT/node_modules/.bin:$ROOT/build/node/bin:$PATH

shard_info=$(manta-manatee-stat -s $SHARD)
[[ $? -eq 0 ]] || fatal "unable to retrieve shard info"

if [[ -z $shard_info ]]
then
    echo "shard $SHARD doesn't exist"
    exit 1
fi

error=$(echo $shard_info | json "error")

if [[ -z $error ]]
then
    echo "shard $SHARD is not in error"
    exit 1
fi

primary=$(echo $error | json "primary")
primary_zone_id=$(echo $error | json "zoneId")
echo "got primary zone id $primary_zone_id"
standby=$(echo $error | json "standby")
standby_zone_id=$(manta-status | grep $standby | tr -s ' ' | cut -d ' ' -f4);
echo "got standby zone id $standby_zone_id"
# hack to pull out the numeric shard id, since manta-status only emits the
# numeric value of the shard
SHARD_ID=$(echo $SHARD | cut -c1)

async_zone_id=$(manta-status | grep postgres | grep -v $primary | \
    grep -v $standby | tr -s " " | cut -d " " -f2,4 | grep "$SHARD_ID " | \
    cut -d " " -f2)
echo "got async zone_id $async_zone_id"

if [[ $standby_zone_id ]]
then
    echo "running manatee-clear on standby $standby_zone_id"
    manta-oneachzone -z $standby_zone_id "source ~/.bashrc; manatee-clear" &
fi
if [[ $async_zone_id ]]
then
    echo "running manatee-clear on async $async_zone_id"
    manta-oneachzone -z $async_zone_id "source ~/.bashrc; manatee-clear" &
fi
echo "sleeping for 10s before invoking manatee-clear on primary"
sleep 10
echo "running manatee-clear on primary $primary_zone_id"
manta-oneachzone -z $primary_zone_id "source ~/.bashrc; manatee-clear" &
